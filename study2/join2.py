# 1
# 다음 튜플을 리스트로 변환
interest = ('삼성전자', 'LG전자', 'SK Hynix')
data = list(interest)

# 2
# 다음 리스트를 튜플로 변경
interest = ['삼성전자', 'LG전자', 'SK Hynix']
data = tuple(interest)

# 3
# 1 부터 99까지의 정수 중 짝수만 저장된 튜플을 생성
# (2, 4, 6, 8 ... 98)
data = tuple(range(2, 100, 2))
print(data)

# 별 표현식
# 4
# 기본적으로 데이터 언패킹은 좌변의 변수와 우변 데이터 개수가 같아야 합니다. 하지만 star expression을 사용하면 변수의 개수가 달라도 데이터 언패킹을 할 수 있다.
# 튜플에 저장된 데이터 중에서 앞에 있는 두 개의 데이터만 필요할 경우 나머지 데이터의 언패킹 코드를 작성할 필요가 없다.
# 다음과 같이 10개의 값이 저장된 scores 리스트가 있을 때, start expression을 사용하여 좌측 8개의 값을 valid_score 변수에 바인딩하여라.
# scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
*valid_score, _, _ = scores
print(valid_score)

# 5
# 다음과 같이 10개의 값이 저장된 scores 리스트가 있을 때, start expression을 사용하여 우측 8개의 값을 valid_score 변수에 바인딩해라.
# scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
a, b, *valid_score = scores
print(valid_score)

# 6
# 다음과 같이 10개의 값이 저장된 scores 리스트가 있을 때, start expression을 사용하여 가운데 있는 8개의 값을 valid_score 변수에 바인딩해라.
# scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
scores = [8.8, 8.9, 8.7, 9.2, 9.3, 9.7, 9.9, 9.5, 7.8, 9.4]
a, *valid_score, b = scores
print(valid_score)

# 7
# temp 이름의 비어있는 딕셔너리를 만들어라.
temp = {}

# 8
# 다음 아이스크림 이름과 희망 가격을 딕셔너리로 구성해라.
##############################################
# 이름	    희망 가격
# 메로나	1000
# 폴라포	1200
# 빵빠레	1800
ice = {"메로나": 1000, "폴라포": 1200, "빵빠레": 1800}
print(ice)

# 9
# 8번의 딕셔너리에 아래 아이스크림 가격정보를 추가하라.
# 이름	    희망 가격
# 죠스바	1200
# 월드콘	1500
ice = {"메로나": 1000, "폴라포": 1200, "빵빠레": 1800}
ice["죠스바"] = 1200
ice["월드콘"] = 1500
print(ice)

# 10
# 다음 딕셔너리를 사용하여 메로나 가격을 출력해라.
# ice = {'메로나': 1000,
#       '폴로포': 1200,
#       '빵빠레': 1800,
#       '죠스바': 1200,
#       '월드콘': 1500}
# 실행 예: 메로나 가격: 1000
print("메로나 가격: ", ice["메로나"])

# 11
# 다음 딕셔너리에서 메로나의 가격을 1300으로 수정해라.
# ice = {'메로나': 1000,
#       '폴로포': 1200,
#       '빵빠레': 1800,
#       '죠스바': 1200,
#       '월드콘': 1500}
ice["메로나"] = 1300

# 12
# 다음 딕셔너리에서 메로나를 삭제해라.
# ice = {'메로나': 1000,
#       '폴로포': 1200,
#       '빵빠레': 1800,
#       '죠스바': 1200,
#       '월드콘': 1500}
del ice["메로나"]
print(ice)

# 13
# 아래의 표에서, 아이스크림 이름을 키값으로, (가격, 재고) 리스트를 딕셔너리의 값으로 저장하라. 딕셔너리의 이름은 inventory로 한다.
################################################
# 이름	    가격	재고
# 메로나	300	    20
# 비비빅	400	    3
# 죠스바	250	    100
################################################
inventory = {"메로나": [300, 20],
             "비비빅": [400, 3],
             "죠스바": [250, 100]}
print(inventory)

# 14
# inventory 딕셔너리에서 메로나의 가격을 화면에 출력해라.
################################################
inventory = {"메로나": [300, 20],
             "비비빅": [400, 3],
             "죠스바": [250, 100]}
################################################
# 실행 예시: 300 원
print(inventory["메로나"][0], "원")

# 15
# inventory 딕셔너리에서 메로나의 재고를 화면에 출력
inventory = {"메로나": [300, 20],
             "비비빅": [400, 3],
             "죠스바": [250, 100]}
# 실행 예시: 20 개
print(inventory["메로나"][1], "개")


# 16
# inventory 딕셔너리에 아래 데이터를 추가해라.
inventory = {"메로나": [300, 20],
             "비비빅": [400, 3],
             "죠스바": [250, 100]}
# 이름	   가격	  재고
# 월드콘	500	  7
# 실행 예시: print(inventory)
# {'메로나': [300, 20], '비비빅': [400, 3], '죠스바': [250, 100], '월드콘': [500, 7]}
inventory = {"메로나": [300, 20],
             "비비빅": [400, 3],
             "죠스바": [250, 100]}
inventory["월드콘"] = [500, 7]
print(inventory)


# 17
# 다음의 딕셔너리로부터 key 값으로만 구성된 리스트를 생성해라.
# icecream = {'탱크보이': 1200, '폴라포': 1200, '빵빠레': 1800, '월드콘': 1500, '메로나': 1000}
icecream = {'탱크보이': 1200, '폴라포': 1200, '빵빠레': 1800, '월드콘': 1500, '메로나': 1000}
ice = list(icecream.keys())
print(ice)


# 18
# 다음의 딕셔너리에서 values 값으로만 구성된 리스트를 생성하라.
# icecream = {'탱크보이': 1200, '폴라포': 1200, '빵빠레': 1800, '월드콘': 1500, '메로나': 1000}
icecream = {'탱크보이': 1200, '폴라포': 1200, '빵빠레': 1800, '월드콘': 1500, '메로나': 1000}
price = list(icecream.values())
print(price)
